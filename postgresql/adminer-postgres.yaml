apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer-postgres
  namespace: postgres
  labels:
    app: adminer-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer-postgres
  template:
    metadata:
      labels:
        app: adminer-postgres
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
      - name: adminer
        image: adminer:4.8.1
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop: ["ALL"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ADMINER_DEFAULT_SERVER
          value: "postgres-cluster-rw"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: adminer-postgres-service
  namespace: postgres
  labels:
    app: adminer-postgres
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: adminer-postgres
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adminer-postgres-ingress
  namespace: postgres
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    cert-manager.io/cluster-issuer: selfsigned-issuer
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - postgres.devsecops.net.au
    secretName: adminer-postgres-tls
  rules:
  - host: postgres.devsecops.net.au
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: adminer-postgres-service
            port:
              number: 80
